vencer(Maquina, Jogador) :- vencer_linha(Maquina, Jogador);
                  vencer_coluna(Maquina, Jogador);
                  vencer_diagonal(Maquina, Jogador).

vencer_linha(Maquina, Jogador) :- Maquina = [Jogador,Jogador,Jogador,_,_,_,_,_,_];
                   Maquina = [_,_,_,Jogador,Jogador,Jogador,_,_,_];
		   Maquina = [_,_,_,_,_,_,Jogador,Jogador,Jogador].

vencer_coluna(Maquina, Jogador) :- Maquina = [Jogador,_,_,Jogador,_,_,Jogador,_,_];
                   Maquina = [_,Jogador,_,_,Jogador,_,_,Jogador,_];
		   Maquina = [_,_,Jogador,_,_,Jogador,_,_,Jogador].

vencer_diagonal(Maquina, Jogador) :- Maquina = [Jogador,_,_,_,Jogador,_,_,_,Jogador];
		   Maquina = [_,_,Jogador,_,Jogador,_,Jogador,_,_].

omove([a,B,C,D,E,F,G,H,I], Jogador, [Jogador,B,C,D,E,F,G,H,I]).
omove([A,a,C,D,E,F,G,H,I], Jogador, [A,Jogador,C,D,E,F,G,H,I]).
omove([A,B,a,D,E,F,G,H,I], Jogador, [A,B,Jogador,D,E,F,G,H,I]).
omove([A,B,C,a,E,F,G,H,I], Jogador, [A,B,C,Jogador,E,F,G,H,I]).
omove([A,B,C,D,a,F,G,H,I], Jogador, [A,B,C,D,Jogador,F,G,H,I]).
omove([A,B,C,D,E,a,G,H,I], Jogador, [A,B,C,D,E,Jogador,G,H,I]).
omove([A,B,C,D,E,F,a,H,I], Jogador, [A,B,C,D,E,F,Jogador,H,I]).
omove([A,B,C,D,E,F,G,a,I], Jogador, [A,B,C,D,E,F,G,Jogador,I]).
omove([A,B,C,D,E,F,G,H,a], Jogador, [A,B,C,D,E,F,G,H,Jogador]).

xmove([a,B,C,D,E,F,G,H,I], 1, [x,B,C,D,E,F,G,H,I]).
xmove([A,a,C,D,E,F,G,H,I], 2, [A,x,C,D,E,F,G,H,I]).
xmove([A,B,a,D,E,F,G,H,I], 3, [A,B,x,D,E,F,G,H,I]).
xmove([A,B,C,a,E,F,G,H,I], 4, [A,B,C,x,E,F,G,H,I]).
xmove([A,B,C,D,a,F,G,H,I], 5, [A,B,C,D,x,F,G,H,I]).
xmove([A,B,C,D,E,a,G,H,I], 6, [A,B,C,D,E,x,G,H,I]).
xmove([A,B,C,D,E,F,a,H,I], 7, [A,B,C,D,E,F,x,H,I]).
xmove([A,B,C,D,E,F,G,a,I], 8, [A,B,C,D,E,F,G,x,I]).
xmove([A,B,C,D,E,F,G,H,a], 9, [A,B,C,D,E,F,G,H,x]).
xmove(Maquina, _, Maquina) :- write('Movimento Ilegal.'), nl.


disp([A,B,C,D,E,F,G,H,I]) :-
	write('|'),
	write([A,B,C]),write('|'),nl,
	write('|'),
	write([D,E,F]),write('|'),nl,	write('|'),
        write([G,H,I]),write('|'),nl,nl.


iniciar :- como_jogar, strt([a,a,a,a,a,a,a,a,a]).

como_jogar :-
  write('Você é o jogador  com o X, entre com o número seguido de um intervalo de tempo.'),
  nl,
  disp([1,2,3,4,5,6,7,8,9]).

strt(Maquina) :- vencer(Maquina, x), write('Você Ganhou!').
strt(Maquina) :- vencer(Maquina, o), write('IA Ganhou!').
strt(Maquina) :- read(N),
  xmove(Maquina, N, NewMaquina),
  disp(NewMaquina),
  oplay(NewMaquina, NewNewMaquina),
  disp(NewNewMaquina),
  strt(NewNewMaquina).


can_x_vencer(Maquina) :- omove(Maquina, x, NewMaquina), vencer(NewMaquina, x).

oplay(Maquina,NewMaquina) :-
  omove(Maquina, o, NewMaquina),
  vencer(NewMaquina, o),!.
oplay(Maquina,NewMaquina) :-
  omove(Maquina, o, NewMaquina),
  not(can_x_vencer(NewMaquina)).
oplay(Maquina,NewMaquina) :-
  omove(Maquina, o, NewMaquina).
oplay(Maquina,NewMaquina) :-
  not(member(a,Maquina)),!,
  write('Jogo Terminado sem Vencedor!'), nl,
  NewMaquina = Maquina.
